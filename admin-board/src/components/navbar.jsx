import React from 'react'
import { Link, useLocation } from 'react-router-dom'
import logo from '../assets/ballance.png'

const Navbar = () => {
  const navLinks = [
    {
      name: 'Home',
      url: '/',
      requireAuth: false,
      icon: <HomeIcon />,
    },
    {
      name: 'Create New',
      url: '/create-new',
      requireAuth: false,
      icon: <CreateIcon />,
    },
    {
      name: 'Checklists',
      url: '/all-lists',
      requireAuth: false,
      icon: <ListsIcon />,
    },

    {
      name: 'Drafts',
      url: '/drafts',
      requireAuth: false,
      icon: <DraftsIcon />,
    },
    {
      name: 'Archive',
      url: '/archive',
      requireAuth: false,
      icon: <ArchiveIcon />,
    },
    {
      name: 'Settings',
      url: '/settings',
      requireAuth: true,
      icon: <SettingsIcon />,
    },
    {
      name: 'User',
      url: '/user',
      requireAuth: false,
      icon: <UserIcon />,
    },
  ]

  const { pathname } = useLocation()
  return (
    <div className="flex flex-col bg-b-mid-blue justify-start items-center py-[2rem]  w-[6rem] md:w-[8.125rem]  gap-[1.5rem] md:gap-[2.56rem]">
      <img src={logo} width={62} height={62} className="w-[3.875rem]" />
      {navLinks.map((link, index) => {
        const isActive =
          pathname === link.url ||
          (link.url === '/all-lists' && pathname.startsWith('/update'))
        return (
          <Link
            key={index}
            to={link.url}
            className="p-2 hover:bg-b-light-blue flex flex-col justify-center items-center gap-[8px] w-full py-[1rem]"
            style={{
              backgroundColor: isActive ? '#00739E' : '',
            }}
          >
            {link.icon}
            <p className="text-[1rem] text-white hidden md:block">
              {link.name}
            </p>
          </Link>
        )
      })}
    </div>
  )
}

export default Navbar

const HomeIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="41"
      viewBox="0 0 40 41"
      fill="none"
    >
      <path
        d="M5 15.5L20 3.83334L35 15.5V33.8333C35 34.7174 34.6488 35.5652 34.0237 36.1904C33.3986 36.8155 32.5507 37.1667 31.6667 37.1667H8.33333C7.44928 37.1667 6.60143 36.8155 5.97631 36.1904C5.35119 35.5652 5 34.7174 5 33.8333V15.5Z"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M15 37.1667V20.5H25V37.1667"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

const CreateIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="41"
      viewBox="0 0 40 41"
      fill="none"
    >
      <path
        d="M35 27.1666V13.8333C34.9994 13.2488 34.8451 12.6747 34.5526 12.1686C34.26 11.6625 33.8396 11.2422 33.3333 10.95L21.6667 4.28331C21.1599 3.99075 20.5851 3.83673 20 3.83673C19.4149 3.83673 18.8401 3.99075 18.3333 4.28331L6.66667 10.95C6.16044 11.2422 5.73997 11.6625 5.44744 12.1686C5.1549 12.6747 5.0006 13.2488 5 13.8333V27.1666C5.0006 27.7512 5.1549 28.3253 5.44744 28.8314C5.73997 29.3375 6.16044 29.7577 6.66667 30.05L18.3333 36.7166C18.8401 37.0092 19.4149 37.1632 20 37.1632C20.5851 37.1632 21.1599 37.0092 21.6667 36.7166L33.3333 30.05C33.8396 29.7577 34.26 29.3375 34.5526 28.8314C34.8451 28.3253 34.9994 27.7512 35 27.1666Z"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5.45001 12.1L20 20.5167L34.55 12.1"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M20 37.3V20.5"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

const ListsIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="38"
      viewBox="0 0 40 38"
      fill="none"
    >
      <path
        d="M36.6666 29.1667C36.6666 30.0507 36.3155 30.8986 35.6903 31.5237C35.0652 32.1488 34.2174 32.5 33.3333 32.5H6.66665C5.78259 32.5 4.93474 32.1488 4.30962 31.5237C3.6845 30.8986 3.33331 30.0507 3.33331 29.1667V5.83333C3.33331 4.94928 3.6845 4.10143 4.30962 3.47631C4.93474 2.85119 5.78259 2.5 6.66665 2.5H15L18.3333 7.5H33.3333C34.2174 7.5 35.0652 7.85119 35.6903 8.47631C36.3155 9.10143 36.6666 9.94928 36.6666 10.8333V29.1667Z"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

const DraftsIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="38"
      viewBox="0 0 40 38"
      fill="none"
    >
      <path
        d="M31.226 14.14L23.354 6.268L7.278 22.346L7.044 22.602C6.67184 23.0451 6.40026 23.5637 6.248 24.122L4.036 32.232L4.006 32.392C3.9891 32.5539 4.01196 32.7174 4.0726 32.8685C4.13325 33.0195 4.22984 33.1535 4.354 33.2587C4.47816 33.3639 4.62612 33.4373 4.78506 33.4724C4.94399 33.5074 5.10908 33.5032 5.266 33.46L13.374 31.248L13.704 31.142C14.246 30.942 14.74 30.628 15.15 30.218L31.226 14.14ZM34.362 3.134C33.8451 2.61707 33.2315 2.20702 32.5562 1.92726C31.8808 1.6475 31.157 1.50351 30.426 1.50351C29.695 1.50351 28.9712 1.6475 28.2958 1.92726C27.6205 2.20702 27.0069 2.61707 26.49 3.134L24.768 4.854L32.64 12.726L34.36 11.006L34.622 10.726C35.5484 9.66296 36.0367 8.28796 35.9885 6.87875C35.9402 5.46954 35.3589 4.13117 34.362 3.134ZM23.296 3.5H5C4.73478 3.5 4.48043 3.60535 4.29289 3.79289C4.10536 3.98043 4 4.23478 4 4.5C4 4.76521 4.10536 5.01957 4.29289 5.2071C4.48043 5.39464 4.73478 5.5 5 5.5H21.296L23.296 3.5ZM17.296 9.5H5C4.73478 9.5 4.48043 9.60535 4.29289 9.79289C4.10536 9.98043 4 10.2348 4 10.5C4 10.7652 4.10536 11.0196 4.29289 11.2071C4.48043 11.3946 4.73478 11.5 5 11.5H15.296L17.296 9.5ZM11.296 15.5L9.296 17.5H5C4.73478 17.5 4.48043 17.3946 4.29289 17.2071C4.10536 17.0196 4 16.7652 4 16.5C4 16.2348 4.10536 15.9804 4.29289 15.7929C4.48043 15.6054 4.73478 15.5 5 15.5H11.296Z"
        fill="white"
      />
    </svg>
  )
}

const ArchiveIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="37"
      viewBox="0 0 40 37"
      fill="none"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M38.5714 -1.07143H1.42857L0 0.357145V8.92857L1.42857 10.3571H2.85714V34.6429L4.28571 36.0714H35.7143L37.1429 34.6429V10.3571H38.5714L40 8.92857V0.357145L38.5714 -1.07143ZM35.7143 7.5H2.85714V1.78572H37.1429V7.5H35.7143ZM5.71429 33.2143V10.3571H34.2857V33.2143H5.71429ZM28.5714 16.0714H11.4286V18.9286H28.5714V16.0714Z"
        fill="white"
      />
    </svg>
  )
}

const UserIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="40"
      viewBox="0 0 16 16"
      fill="none"
    >
      <path
        d="M11.3334 14V12.6667C11.3334 11.9594 11.0524 11.2811 10.5523 10.781C10.0522 10.281 9.37393 10 8.66669 10H3.33335C2.62611 10 1.94783 10.281 1.44774 10.781C0.947639 11.2811 0.666687 11.9594 0.666687 12.6667V14"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5.99998 7.33333C7.47274 7.33333 8.66665 6.13943 8.66665 4.66667C8.66665 3.19391 7.47274 2 5.99998 2C4.52722 2 3.33331 3.19391 3.33331 4.66667C3.33331 6.13943 4.52722 7.33333 5.99998 7.33333Z"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M15.3333 14V12.6667C15.3329 12.0758 15.1362 11.5019 14.7742 11.0349C14.4122 10.5679 13.9054 10.2344 13.3333 10.0867"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M10.6667 2.08667C11.2403 2.23354 11.7487 2.56714 12.1118 3.03488C12.4748 3.50262 12.6719 4.07789 12.6719 4.67C12.6719 5.26212 12.4748 5.83739 12.1118 6.30513C11.7487 6.77287 11.2403 7.10647 10.6667 7.25334"
        stroke="white"
        strokeWidth="1.33"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

const SettingsIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
    >
      <path
        d="M20 12.5C18.0109 12.5 16.1033 13.2902 14.6967 14.6967C13.2902 16.1032 12.5 18.0109 12.5 20C12.5 21.9891 13.2902 23.8968 14.6967 25.3033C16.1033 26.7098 18.0109 27.5 20 27.5C21.9892 27.5 23.8968 26.7098 25.3033 25.3033C26.7099 23.8968 27.5 21.9891 27.5 20C27.5 18.0109 26.7099 16.1032 25.3033 14.6967C23.8968 13.2902 21.9892 12.5 20 12.5ZM15 20C15 18.6739 15.5268 17.4021 16.4645 16.4644C17.4022 15.5268 18.674 15 20 15C21.3261 15 22.5979 15.5268 23.5356 16.4644C24.4733 17.4021 25 18.6739 25 20C25 21.3261 24.4733 22.5978 23.5356 23.5355C22.5979 24.4732 21.3261 25 20 25C18.674 25 17.4022 24.4732 16.4645 23.5355C15.5268 22.5978 15 21.3261 15 20ZM15.494 39.468C16.973 39.821 18.487 39.999 20.007 39.999C21.5238 39.9976 23.0351 39.8184 24.51 39.465C24.8978 39.3716 25.2474 39.161 25.5111 38.8618C25.7749 38.5626 25.94 38.1894 25.984 37.793L26.322 34.722C26.3795 34.1729 26.6309 33.6624 27.0311 33.2821C27.4312 32.9018 27.9538 32.6766 28.505 32.647C28.872 32.631 29.237 32.7 29.573 32.847L32.38 34.078C32.6241 34.1879 32.8884 34.2455 33.156 34.2472C33.4236 34.2489 33.6886 34.1947 33.934 34.088C34.181 33.983 34.402 33.827 34.584 33.63C36.6472 31.4047 38.188 28.7471 39.094 25.851C39.2129 25.4667 39.2093 25.0551 39.0839 24.6729C38.9585 24.2908 38.7174 23.9571 38.394 23.718L35.9 21.878C35.603 21.6622 35.3612 21.3792 35.1945 21.0521C35.0278 20.725 34.9409 20.3631 34.9409 19.996C34.9409 19.6288 35.0278 19.2669 35.1945 18.9398C35.3612 18.6127 35.603 18.3297 35.9 18.114L38.386 16.278C38.7104 16.0385 38.9521 15.704 39.0776 15.3208C39.203 14.9376 39.206 14.5249 39.086 14.14C38.1814 11.2427 36.6385 8.58517 34.571 6.36298C34.2969 6.07079 33.939 5.87066 33.5465 5.79009C33.154 5.70951 32.7462 5.75244 32.379 5.91298L29.573 7.14898C29.283 7.27998 28.967 7.34898 28.647 7.34898C28.0712 7.3474 27.5161 7.13353 27.0881 6.74829C26.66 6.36305 26.3891 5.8335 26.327 5.26098L25.987 2.20098C25.9431 1.79951 25.775 1.42176 25.5061 1.12042C25.2372 0.819085 24.8809 0.609177 24.487 0.519977C23.0194 0.192601 21.5217 0.0186667 20.018 0.000976562C18.5041 0.0190068 16.9961 0.193264 15.518 0.520977C15.1244 0.60926 14.7682 0.818367 14.4992 1.11905C14.2303 1.41974 14.062 1.79697 14.018 2.19798L13.678 5.25998C13.6134 5.83345 13.3401 6.3631 12.91 6.74798C12.4706 7.12083 11.9171 7.3325 11.341 7.34798C11.0233 7.34776 10.709 7.28171 10.418 7.15398L7.61804 5.91798C7.24974 5.75585 6.84015 5.71226 6.44598 5.79324C6.05181 5.87422 5.69258 6.07577 5.41804 6.36998C3.35399 8.5931 1.81307 11.2496 0.908038 14.145C0.788312 14.5298 0.791385 14.9423 0.916828 15.3252C1.04227 15.7082 1.28386 16.0426 1.60804 16.282L4.09604 18.118C4.54049 18.4465 4.85459 18.9214 4.98285 19.459C5.11112 19.9966 5.04531 20.5622 4.79704 21.056C4.63188 21.3833 4.3921 21.6673 4.09704 21.885L1.60704 23.724C1.28326 23.9632 1.04193 24.2973 0.916501 24.6798C0.791076 25.0624 0.787768 25.4745 0.907038 25.859C1.80956 28.7576 3.35072 31.4168 5.41704 33.641C5.68997 33.9353 6.04789 34.1372 6.44095 34.2186C6.83402 34.3 7.24268 34.2568 7.61004 34.095L10.428 32.858C10.719 32.73 11.033 32.664 11.351 32.664H11.359C11.9328 32.6652 12.486 32.8771 12.9138 33.2594C13.3415 33.6418 13.6138 34.168 13.679 34.738L14.017 37.795C14.0611 38.192 14.2265 38.5657 14.4909 38.8651C14.7552 39.1645 15.1056 39.3751 15.494 39.468ZM23.558 37.123C21.218 37.623 18.798 37.623 16.458 37.123L16.154 34.461C16.0214 33.2799 15.4589 32.189 14.5737 31.396C13.6885 30.603 12.5425 30.1634 11.354 30.161H11.344C10.681 30.157 10.0246 30.2933 9.41804 30.561L6.97204 31.634C5.38442 29.845 4.17365 27.7544 3.41204 25.487L5.57704 23.887C6.18715 23.4371 6.68306 22.8502 7.02482 22.1736C7.36658 21.497 7.54464 20.7495 7.54464 19.9915C7.54464 19.2334 7.36658 18.486 7.02482 17.8094C6.68306 17.1327 6.18715 16.5459 5.57704 16.096L3.41304 14.496C4.17829 12.2321 5.38909 10.1444 6.97404 8.35598L9.40604 9.42798C10.0136 9.69877 10.6718 9.83749 11.337 9.83498H11.347C12.5384 9.8325 13.6873 9.39158 14.5744 8.5963C15.4615 7.80103 16.0249 6.70704 16.157 5.52298L16.457 2.86298C17.6302 2.62807 18.8226 2.5022 20.019 2.48698C21.206 2.50198 22.389 2.62698 23.553 2.86198L23.853 5.52098C23.9814 6.70498 24.5422 7.79996 25.4279 8.59604C26.3137 9.39212 27.4621 9.83329 28.653 9.83498C29.3247 9.85077 29.9908 9.71042 30.599 9.42498L33.029 8.35398C34.6167 10.141 35.8281 12.2296 36.591 14.495L34.434 16.088C33.8196 16.5358 33.3196 17.1225 32.975 17.8003C32.6303 18.478 32.4506 19.2276 32.4506 19.988C32.4506 20.7483 32.6303 21.4979 32.975 22.1757C33.3196 22.8534 33.8196 23.4401 34.434 23.888L36.599 25.488C35.8341 27.7517 34.6236 29.8394 33.039 31.628L30.599 30.558C29.9044 30.2498 29.1467 30.1102 28.3879 30.1507C27.629 30.1911 26.8905 30.4104 26.2325 30.7907C25.5746 31.171 25.0159 31.7014 24.602 32.3387C24.1881 32.9761 23.9308 33.7022 23.851 34.458L23.558 37.123Z"
        fill="white"
      />
    </svg>
  )
}
